#!/bin/bash

# Prevent for loops from splitting filenames containing whitespace
IFS="
"

declare -A SUBTOTAL

ruby_count() {
    sed -r '/^\s*(#|$)/d;/^=begin$/,/^=end$/d' $1 | wc -l
}

add() {
    : $((SUBTOTAL[$1] += $2))
}

count() {
    case $1 in
        awk|make|perl|python|sed|shell|tcl)
                    add $1 $(sed -r '/^\s*(#|$)/d' $2 | wc -l);;
        ruby)       add $1 $(ruby_count $2);;
        c|css|js)   add $1 $(stripcmt $2 | sed '/^\s*$/d' | wc -l);;
        sql|lua)    add $1 $(sed -r '/^\s*(\-\-|$)/d' $2 | wc -l);;
        html)       add $1 $(sed '/^\s*$/d' $2 | wc -l);;
        *)          echo "File recognised but not counted: $2" >&2;;
    esac
}

for FILE in $(find "$PWD" -type f -not -path "$PWD/.*"); do
    case $FILE in
        *.awk)              count awk $FILE;;
        *.c|*.h)            count c $FILE;;
        *.css)              count css $FILE;;
        *.html)             count html $FILE;;
        *.l)                count lex $FILE;;
        *.lua)              count lua $FILE;;
        *.js)               count js $FILE;;
        *.perl|*.pl|*.pm)   count perl $FILE;;
        *.py)               count python $FILE;;
        *.rb)               count ruby $FILE;;
        *.sed)              count sed $FILE;;
        *.sql)              count sql $FILE;;
        *.tcl)              count tcl $FILE;;
        *.y)                count yacc $FILE;;
        *.??sh)             count shell $FILE;;
        *[Mm]akefile)       count make $FILE;;
        *) case $(head -1 $FILE) in
            \#!*/awk*)      count awk $FILE;;
            *html*)         count html $FILE;;
            \#!*/lua*)      count lua $FILE;;
            \#!*/perl*)     count perl $FILE;;
            \#!*/python*)   count python $FILE;;
            \#!*/ruby*)     count ruby $FILE;;
            \#!*/sed*)      count sed $FILE;;
            \#!*/??sh*)     count shell $FILE;;
        esac;;
    esac
done

for KEY in ${!SUBTOTAL[@]}; do
    printf "%-8s %d\n" $KEY: ${SUBTOTAL[$KEY]}
    : $((TOTAL += ${SUBTOTAL[$KEY]}))
done

printf "%-8s %d\n" total: $TOTAL
